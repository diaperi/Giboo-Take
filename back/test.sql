CREATE TABLE "DONATION" (
	"DONATION_NO"	NUMBER	PRIMARY KEY, -- 기부No
    "TARGET_AMOUN"  NUMBER, -- 목표금액
    "LOCATION_X"    VARCHAR2(100), -- 기부지역x좌표
    "LOCATION_Y"    VARCHAR2(100), -- 기부지역Y좌표
    "DONATION ADDR" VARCHAR2(200), -- 기부 주소
    "ENROLL_DATE"   DATE      DEFAULT SYSDATE, -- 등록일
    "START_RECRUIT_DATE"  DATE  DEFAULT SYSDATE, -- 모집일       
    "END_RECRUIT_DATE"  DATE   DEFAULT SYSDATE, -- 마감일
    "START_PROGRESS_DATE"    DATE    DEFAULT SYSDATE, -- 진행일
    "END_PROGRESS_DATE"     DATE    DEFAULT SYSDATE, --진행마감일
    "DELETE_STATUS" CHAR(1)		DEFAULT 'N', -- 기부삭제여부
    "DCOM_STATUS"	CHAR(1)	DEFAULT 'N', -- 기부완료여부
	"DAGENCY_NAME"	VARCHAR2(50)	NOT NULL, -- 기부금
    "DONATION _AMOUNT"	NUMBER	NOT NULL, -- 기부 참여 인원
    "VIEW_COUNT"    NUMBER NOT NULL, -- 조회수
    "DONATION_TITLE"	VARCHAR2(200)	NOT NULL,-- 기첨부제목
	"DONATION_CONTENT"	VARCHAR2(2000)	NOT NULL,-- 기부내용
	"DONATION_ATTACHMENT"	VARCHAR2(200)	NULL,-- 기부첨부파일
	"MEMBER_NO"	NUMBER	NOT NULL, -- MEMBERNO
	"CATEGORY_NO"	NUMBER	NOT NULL, --카테코리NO
    "AGENCY_NO"     NUMBER  NOT NULL, -- 기관 NO
);
ALTER TABLE "DONATION" 
ADD CONSTRAINT DONATION_CHK CHECK(DELETE_STATUS IN ('Y','N'));
ALTER TABLE "DONATION" 
ADD CONSTRAINT DONATION_CHK_2 CHECK(DCOM_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "MEMBER" ( -- 멤버 테이블
	"MEMBER_NO"	NUMBER	PRIMARY KEY, -- 사용자NO
	"MEMBER_ID"	VARCHAR2(50)	NOT NULL -- 사용자 ID
	"MEMBER_PW"	VARCHAR2(200)	NOT NULL, -- 사용자 PW
    "MEMBER_EMAIL" VARCHAR2(50) NOT NULL -- 사용자 이메일
	"MEMBER_NAME"	VARCHAR2(50)	NOT NULL, -- 사용자 이름
	"MEMBER_NICK"	VARCHAR2(50)	NOT NULL, -- 사용자 닉네임
	"MEMBER_TEL"	NUMBER	NOT NULL, -- 사용자 전화번호
	"MEMBER_ADDR"	VARCHAR2(200)	NOT NULL, -- 사용자 주소
	"ENROLL_DT"	DATE DEFAULT SYSDATE, -- 가입일
	"SECESSION_FL"	CHAR(1)		DEFAULT 'N', -- 탈퇴여부
	"PROFILE_IMG"	VARCHAR2(200)	NULL, -- 사용자 프로필 이미지
	"MEMBER_TYPE"	CHAR(1)	NOT NULL, -- 사용자 구분(사용자, 운영자)
	"POINT_PRICE"	NUMBER	NULL, -- 보유적립금
);

ALTER TABLE "MEMBER" 
ADD CONSTRAINT MEMBER_CHK CHECK(SECESSION_FL IN ('Y','N'));

ALTER TABLE "MEMBER" 
ADD CONSTRAINT MEMBER_TYPE_CHK CHECK(MEMBER_TYPE IN ('Y','N'));


CREATE TABLE "MANAGER" ( -- 사용자 테이블
	"MGR_NO"	NUMBER	PRIMARY KEY, -- 관리자NO
	"MGR_ID"	VARCHAR2(50)	NOT NULL, -- 관리자 ID
	"MGR_PW"	VARCHAR2(200)	NOT NULL, -- 관리자 PW
	"MGR_EMAIL"	VARCHAR2(50)	NOT NULL, -- 관리자 이메일
	"MGR_NAME"	VARCHAR2(50)	NOT NULL, -- 관리자 이름
	"MGR_NICKNAME"	VARCHAR2(100)	NOT NULL, -- 관리자 닉네임
	"MGR_TEL"	CHAR(11)	NOT NULL, -- 관리자 전화번호
	"MGR_PERMISSION"	CHAR(1)	NOT NULL -- 관리자 권한
	"MGR_PROFILE_IMG"	VARCHAR2(200)	NULL, -- 관리자 프로필이미지
);

CREATE TABLE "PAYMENT" ( -- 결제 테이블
	"PAYMENT_NO"	NUMBER	PRIMARY KEY, -- 결제NO
	"PAYMENT_TYPE"	VARCHAR2(20)	NOT NULL, -- 결제 수단
	"PAYMENT_DATE"	DATE	DEFAULT SYSDATE, -- 결제일
	"PAYMENT_PRICE"	NUMBER	NOT NULL, -- 결제금액
	"MEMBER_NO"	NUMBER	NOT NULL, -- 사용자NO
    CONSTRAINT FK_MEMBER_NO FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE,
	"DONATION_NO"	NUMBER	NOT NULL, -- 기부NO
    CONSTRAINT FK_DONATION_NO FOREIGN KEY(MEMBER_NO) REFERENCES DONATION(DONATION_NO) ON DELETE CASCADE
);

CREATE TABLE "EMAIL_CERTIFICATION" ( -- 이메일 인증 테이블
	"MEMBER_NO"	NUMBER	NOT NULL, -- 이메일 인증NO
	"CERTIFICATION_NO"	VARCHAR2(10)	NOT NULL, -- 인증번호
	"ISSUE_DT"	DATE	DEFAULT SYSDATE -- 요청시간
);

CREATE TABLE "CATEGORY" ( -- 카테고리 테이블
	"CATEGORY_NO"	NUMBER	PRIMARY KEY, -- 카테고리 NO
	"CATEGORY_NAME"	VARCHAR2(50)	NOT NULL, -- 카테고리 이름
	"CATEGORY_ID"	CHAR	NULL, -- 카테고리 ID
	"CATEGORY_LEV"	NUMBER	NULL,
	"CATEGORY_NM"	VARCHAR2(5)	NULL,
	"CATEGORY_PARENT_LEV"	NUMBER	REFERENCES CATEGORY
	
);

CREATE TABLE "NOTICE" ( -- 공지사항 테이블
	"NOTICE_NO"	NUMBER	PRIMARY KEY, -- 공지사항NO
	"NOTICE_TITLE"	VARCHAR2(200)	NOT NULL, -- 공지사항 제목
	"NOTICE_CONTENT"	VARCHAR2(2000)	NOT NULL, -- 공지사항 내용
    "ATTACHMENT" VARCHAR2(2000), -- 첨부파일
	"ENROLL_DT"	DATE	DEFAULT SYSDATE, -- 작성일
	"VIEW_COUNT"	NUMBER		DEFAULT 0, -- 조회수
	"DELETE_STATUS"	CHAR(1)		DEFAULT 'N', -- 삭제유무
	"MGR_NO"	NUMBER	NOT NULL, -- 관리자NO
    CONSTRAINT FK_MGR_NO FOREIGN KEY(MGR_NO) REFERENCES MANAGER(MGR_NO) ON DELETE CASCADE
);

ALTER TABLE "NOTICE" 
ADD CONSTRAINT DELETE_STATUS_CHK CHECK(DELETE_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "VOLUNTEER" ( -- 봉사 테이블
	"VOLUNTEER_NO"	NUMBER	PRIMARY KEY, -- 봉사NO
	"TARGET_PEOPLE" NUMBER NOT NULL, -- 목표인원
    "LOCATION_X" NUMBER NOT NULL, -- 기부지역(X좌표)
    "LOCATION_Y" NUMBER NOT NULL, -- 기부지역(Y좌표)
    "VOLUNTEER_ADDR" VARCHAR2 NOT NULL, -- 기부 주소
    "ENROLL_DATE" DATE NOT NULL, -- 등록일
    "START_RECRUIT_DATE" DATE NOT NULL, -- 모집일
    "END_RECRUIT_DATE" DATE NOT NULL, -- 마감일
    "START_PROGRESS_DATE" DATE NOT NULL, -- 진행일
    "END_PROGRESS_DATE" DATE NOT NULL, -- 진행마감일
    "VOLUNTEER_DELETE_STATUS" CHAR(1) NOT NULL, -- 봉사 삭제 여부
    "VOLUNTEER_COMPLETE_STATUS" CHAR(1) NOT NULL, -- 봉사 완료 여부
    "VOLUNTEER_COUNT" NUMBER NOT NULL, -- 봉사 참여 인원
    "VIEW_COUNT" NUMBER NOT NULL, -- 조회수
    "VOLUNTEER_TITLE" VARCHAR2(200), -- 봉사 제목
    "VOLUNTEER_CONTENT" VARCHAR2(2000) -- 봉사 내용
    "VOLUNTEER_ATTACHEMENT" VARCHAR2(2000) -- 봉사 첨부파일
    "MEMBER_NO" NUMBER NOT NULL, -- 사용자NO
    CONSTRAINT FK_MEMBER_NO FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE
);

ALTER TABLE "VOLUNTEER" 
ADD CONSTRAINT VOLUNTEER_DELETE_STATUS_CHK CHECK(VOLUNTEER_DELETE_STATUS IN ('Y','N'));

ALTER TABLE "VOLUNTEER" 
ADD CONSTRAINT VOLUNTEER_COMPLETE_STATUS_CHK CHECK(VOLUNTEER_COMPLETE_STATUS IN ('Y','N'));
COMMIT;

CREATE TABLE "ALARM" (
	"ALARM_NO"	NUMBER	PRIMARY KEY,
	"ALARM_CONTENT"	VARCHAR2(2000)	NOT NULL,
	"ALARM_DATE"	DATE	DEFAULT SYSDATE,
	"READ_STATUS"	CHAR(1) DEFAULT 'N',
	"MEMBER_NO"	NUMBER	NOT NULL,
	"DONATION_NO"	NUMBER	NOT NULL,
	"VOLUNTEER_NO"	NUMBER	NOT NULL,
	"REVIEW_NO"	NUMBER	NOT NULL,
	"POINT_NO"	NUMBER	NOT NULL,
	"EVENT_NO"	NUMBER	NOT NULL,
    "NOTICE_NO"	NUMBER	NOT NULL,
	"ASK_NO"	NUMBER	NOT NULL
);

ALTER TABLE "ALARM" 
ADD CONSTRAINT READ_STATUS_CHK CHECK(READ_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "EVENT" (
	"EVENT_NO"	NUMBER	PRIMARY KEY,
	"EVENT_TITLE"	VARCHAR2(200)	NOT NULL,
	"EVENT_CONTENT"	VARCHAR2(2000)	NOT NULL,
    "TARGET_PEOPLE" NUMBER,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE,    
	"END_RECRUIT_DATE"	DATE NOT NULL,
	"MODI_STATUS"	CHAR(1)		DEFAULT 'N',
	"ATTACHMENT"	VARCHAR2(200)	NULL,
	"MGR_NO"	NUMBER NOT NULL
);

ALTER TABLE "EVENT" 
ADD CONSTRAINT MODI_STATUS_CHK CHECK(MODI_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "STAMP"(
  "STAMP_NO" NUMBER PRIMARY KEY,
  "STAMP_COUNT" NUMBER,
  "EVENT_NO"  NUMBER NOT NULL,
  "MEMBER_NO" NUMBER NOT NULL
);

CREATE TABLE "EVENT_PERSON" (
	"EVEVT_PERSON_NO"	NUMBER	PRIMARY KEY,
    "CERTIFICATION_STATUS" CHAR(1)	DEFAULT 'N',
	"MEMBER_NO"	NUMBER	NOT NULL,
	"EVENT_NO"	NUMBER	NOT NULL
);

ALTER TABLE "EVENT_PERSON" 
ADD CONSTRAINT CERTIFICATION_STATUS_CHK CHECK(CERTIFICATION_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "EVENT_CERTIFICATION"(
    "EVENT_CERTIFICATION_NO" NUMBER	PRIMARY KEY,
    "EVENT_CERTIFICATION_CONTENT" VARCHAR(50) NOT NULL,
    "EVENT_CERTIFICATION_ATTACHMENT" VARCHAR2(200)	NULL,
    "EVENT_PERSON_NO" NUMBER(50) NOT NULL
);




CREATE TABLE "FAVORITES" (
	"FAVORITE_NO"	NUMBER	PRIMARY KEY,
	"FAVORITE_STATUS"	CHAR(1)		DEFAULT 'N',
	"MEMBER_NO"	NUMBER	NOT NULL,
	"DONATION_NO"	NUMBER	NOT NULL,
	"VOLUNTEER_NO"	NUMBER	NOT NULL
);
ALTER TABLE "FAVORITES" 
ADD CONSTRAINT FAVORITE_STATUS_CHK CHECK(FAVORITE_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "MYACTIVE" (
	"MYACT_NO"	NUMBER	PRIMARY KEY,
	"VOLCOM_STATUS"	CHAR(1)	DEFAULT 'N',
	"DONATION_NO"	NUMBER	NOT NULL,
	"VOLUNTEER_NO"	NUMBER	NOT NULL,
	"MEMBER_NO"	NUMBER	NOT NULL,
	"EVENT_NO"	NUMBER	NOT NULL
);

ALTER TABLE "MYACTIVE" 
ADD CONSTRAINT VOLCOM_STATUS_CHK CHECK(VOLCOM_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "POINT"(
    "POINT_NO" NUMBER PRIMARY KEY,
    "POINT_INCREASE" VARCHAR2(200), 
    "POINT_INCREASE_DATE" DATE, 
    "POINT_CONTENT" VARCHAR2(1000) NOT NULL,
    "MEMBER_NO" NUMBER NOT NULL,
    "DONATION_NO" NUMBER NOT NULL,
    "EVENT_NO" NUMBER NOT NULL
);

CREATE TABLE "ASK" (
	"ASK_NO"	NUMBER	PRIMARY KEY,
	"ASK_TITLE"	VARCHAR2(100)	NOT NULL,
	"ASK_CONTENT"	VARCHAR2(1000)	NOT NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE,
	"ASk_STATUS"	CHAR(1)	DEFAULT 'N',
	"ASK_FILE"	VARCHAR2(200)	NULL,
	"MEMBER_NO"	NUMBER	NOT NULL
);

ALTER TABLE "ASK" 
ADD CONSTRAINT ASk_STATUS_CHK CHECK(ASk_STATUS IN ('Y','N'));

COMMIT;



CREATE TABLE "RATE" (
	"RATE_NO"	NUMBER	PRIMARY KEY,
	"RATE_NAME"	VARCHAR2(20)	NOT NULL,
	"RENEWAL_DATE"	DATE	DEFAULT SYSDATE,
	"MEMBER_NO"	NUMBER	NOT NULL,
	"MYACT_NO"	NUMBER	NOT NULL
);

CREATE TABLE "CUSTOMER_SERVICE" (
	"CS_NO"	NUMBER	PRIMARY KEY,
	"CHAT_CONTENT"	VARCHAR2(2000)	NOT NULL,
	"ENROLL_DT"	DATE	DEFAULT SYSDATE,
	"CHAT_END_DT"	DATE	DEFAULT SYSDATE,
	"CHAT_ROMM_STATUS"	CHAR(1)	DEFAULT 'N',
	"MGR_NO"	NUMBER	NOT NULL,
	"MEMBER_NO"	NUMBER	NOT NULL
);

ALTER TABLE "CUSTOMER_SERVICE" 
ADD CONSTRAINT CHAT_ROMM_STATUS_CHK CHECK(CHAT_ROMM_STATUS IN ('Y','N'));

COMMIT;


CREATE TABLE "REVIEW" (
	"REVIEW_NO"	NUMBER	PRIMARY KEY,
	"REVIEW_CONTENT"	VARCHAR2(1000)	NOT NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE,
	"SECESSION_FL"	CHAR(1)	DEFAULT 'N',
	"MEMBER_NO"	NUMBER	NOT NULL,
	"DONATION_NO"	NUMBER	NOT NULL,
	"VOLUNTEER_NO"	NUMBER	NOT NULL
);

ALTER TABLE "REVIEW" 
ADD CONSTRAINT SECESSION_FL_CHK CHECK(REVIEW_STATUS IN ('Y','N'));

COMMIT;

CREATE TABLE "MAP" (
	"MAP_NO"	NUMBER	PRIMARY KEY,
	"DONATION_NO"	NUMBER	NOT NULL,
	"CATEGORY_NO"	NUMBER	NOT NULL,
	"VOLUNTEER_NO"	NUMBER	NOT NULL
);



-- 시퀀스 생성
CREATE SEQUENCE SEQ_ALARM_NO;
CREATE SEQUENCE SEQ_ASK_NO;
CREATE SEQUENCE SEQ_CATEGORY_NO;
CREATE SEQUENCE SEQ_CS_NO;
CREATE SEQUENCE SEQ_DONATION_NO;
CREATE SEQUENCE SEQ_EVENT_NO;
CREATE SEQUENCE SEQ_EVENT_REGITER_NO;
CREATE SEQUENCE SEQ_FAV_NO;
CREATE SEQUENCE SEQ_MGR_NO;
CREATE SEQUENCE SEQ_MAP_NO;
CREATE SEQUENCE SEQ_MEMBER_NO;
CREATE SEQUENCE SEQ_MYACT_NO;
CREATE SEQUENCE SEQ_NOTICE_NO;
CREATE SEQUENCE SEQ_PAYMENT_NO;
CREATE SEQUENCE SEQ_RATE_NO;
CREATE SEQUENCE SEQ_USAGE_NO;
CREATE SEQUENCE SEQ_REVIEW_NO;

CREATE SEQUENCE SEQ_VOLUNTEER_NO;


